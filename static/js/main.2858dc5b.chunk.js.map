{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","goods","setGoods","isReversed","setIsReversed","resetVisible","setResetVisible","activeButton","setActiveButton","className","type","onClick","sortedGoods","sort","reverse","a","b","length","reversedGoods","join","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAoCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAqC,iBAAjBF,EAAkC,GAAK,YACpEI,QAxCyB,WAC/B,IAAMC,EAAc,YAAIX,GAAOY,OAE/BX,EAASC,EAAaS,EAAYE,UAAYF,GAC9CR,GAAc,GACdE,GAAgB,GAChBE,EAAgB,iBA+BZ,iCAQA,wBACEE,KAAK,SACLD,UAAS,4BAAwC,WAAjBF,EAA4B,GAAK,YACjEI,QAvCmB,WACzB,IAAMC,EAAc,YAAIX,GAAOY,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAE3Df,EAASC,EAAaS,EAAYE,UAAYF,GAC9CR,GAAc,GACdE,GAAgB,GAChBE,EAAgB,WA8BZ,4BAQA,wBACEE,KAAK,SACLD,UAAS,4BAAwC,YAAjBF,EAA6B,GAAK,YAClEI,QAtCc,WACpB,IAAMO,EAAgB,YAAIjB,GAAOa,UAEjCZ,EAASgB,GACTd,GAAeD,GACfG,EAAgBL,EAAMkB,KAAK,MAAQrB,EAAgBqB,KAAK,KACxDX,EAAgB,YA6BZ,qBAQCH,GACC,wBACEK,KAAK,SACLD,UAAS,2BAAuC,OAAjBF,EAAwB,GAAK,YAC5DI,QAtCU,WAClBT,EAASJ,GACTM,GAAc,GACdE,GAAgB,GAChBE,EAAgB,OA+BV,sBAUJ,6BACGP,EAAMmB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC9FnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2858dc5b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [isReversed, setIsReversed] = useState(false);\n  const [resetVisible, setResetVisible] = useState(false);\n  const [activeButton, setActiveButton] = useState(null);\n\n  const handleSortAlphabetically = () => {\n    const sortedGoods = [...goods].sort();\n\n    setGoods(isReversed ? sortedGoods.reverse() : sortedGoods);\n    setIsReversed(false);\n    setResetVisible(true);\n    setActiveButton('alphabetical');\n  };\n\n  const handleSortByLength = () => {\n    const sortedGoods = [...goods].sort((a, b) => a.length - b.length);\n\n    setGoods(isReversed ? sortedGoods.reverse() : sortedGoods);\n    setIsReversed(false);\n    setResetVisible(true);\n    setActiveButton('length');\n  };\n\n  const handleReverse = () => {\n    const reversedGoods = [...goods].reverse();\n\n    setGoods(reversedGoods);\n    setIsReversed(!isReversed);\n    setResetVisible(goods.join('') !== goodsFromServer.join(''));\n    setActiveButton('reverse');\n  };\n\n  const handleReset = () => {\n    setGoods(goodsFromServer);\n    setIsReversed(false);\n    setResetVisible(false);\n    setActiveButton(null);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${activeButton === 'alphabetical' ? '' : 'is-light'}`}\n          onClick={handleSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${activeButton === 'length' ? '' : 'is-light'}`}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${activeButton === 'reverse' ? '' : 'is-light'}`}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {resetVisible && (\n          <button\n            type=\"button\"\n            className={`button is-danger ${activeButton === null ? '' : 'is-light'}`}\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}